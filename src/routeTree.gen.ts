/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutStoreSettingsLazyImport = createFileRoute(
  '/_layout/store-settings',
)()
const LayoutProductsLazyImport = createFileRoute('/_layout/products')()
const LayoutOrdersLazyImport = createFileRoute('/_layout/orders')()
const LayoutCustomersLazyImport = createFileRoute('/_layout/customers')()
const LayoutAnalyticsLazyImport = createFileRoute('/_layout/analytics')()
const LayoutAdministratorsLazyImport = createFileRoute(
  '/_layout/administrators',
)()
const LayoutAccountSettingsLazyImport = createFileRoute(
  '/_layout/account-settings',
)()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutStoreSettingsLazyRoute = LayoutStoreSettingsLazyImport.update({
  path: '/store-settings',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/store-settings.lazy').then((d) => d.Route),
)

const LayoutProductsLazyRoute = LayoutProductsLazyImport.update({
  path: '/products',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/products.lazy').then((d) => d.Route),
)

const LayoutOrdersLazyRoute = LayoutOrdersLazyImport.update({
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/orders.lazy').then((d) => d.Route),
)

const LayoutCustomersLazyRoute = LayoutCustomersLazyImport.update({
  path: '/customers',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/customers.lazy').then((d) => d.Route),
)

const LayoutAnalyticsLazyRoute = LayoutAnalyticsLazyImport.update({
  path: '/analytics',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/analytics.lazy').then((d) => d.Route),
)

const LayoutAdministratorsLazyRoute = LayoutAdministratorsLazyImport.update({
  path: '/administrators',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/administrators.lazy').then((d) => d.Route),
)

const LayoutAccountSettingsLazyRoute = LayoutAccountSettingsLazyImport.update({
  path: '/account-settings',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/account-settings.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/account-settings': {
      preLoaderRoute: typeof LayoutAccountSettingsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/administrators': {
      preLoaderRoute: typeof LayoutAdministratorsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/analytics': {
      preLoaderRoute: typeof LayoutAnalyticsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/customers': {
      preLoaderRoute: typeof LayoutCustomersLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/orders': {
      preLoaderRoute: typeof LayoutOrdersLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products': {
      preLoaderRoute: typeof LayoutProductsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/store-settings': {
      preLoaderRoute: typeof LayoutStoreSettingsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAccountSettingsLazyRoute,
    LayoutAdministratorsLazyRoute,
    LayoutAnalyticsLazyRoute,
    LayoutCustomersLazyRoute,
    LayoutOrdersLazyRoute,
    LayoutProductsLazyRoute,
    LayoutStoreSettingsLazyRoute,
    LayoutIndexLazyRoute,
  ]),
  LoginLazyRoute,
])

/* prettier-ignore-end */
