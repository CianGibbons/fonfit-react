/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutUsersLazyImport = createFileRoute('/_layout/users')()
const LayoutSettingsLazyImport = createFileRoute('/_layout/settings')()
const LayoutProductsLazyImport = createFileRoute('/_layout/products')()
const LayoutOrdersLazyImport = createFileRoute('/_layout/orders')()
const LayoutClientsLazyImport = createFileRoute('/_layout/clients')()
const LayoutAccountLazyImport = createFileRoute('/_layout/account')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/index.lazy').then((d) => d.Route))

const LayoutUsersLazyRoute = LayoutUsersLazyImport.update({
  path: '/users',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout/users.lazy').then((d) => d.Route))

const LayoutSettingsLazyRoute = LayoutSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/settings.lazy').then((d) => d.Route),
)

const LayoutProductsLazyRoute = LayoutProductsLazyImport.update({
  path: '/products',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/products.lazy').then((d) => d.Route),
)

const LayoutOrdersLazyRoute = LayoutOrdersLazyImport.update({
  path: '/orders',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/orders.lazy').then((d) => d.Route),
)

const LayoutClientsLazyRoute = LayoutClientsLazyImport.update({
  path: '/clients',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/clients.lazy').then((d) => d.Route),
)

const LayoutAccountLazyRoute = LayoutAccountLazyImport.update({
  path: '/account',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/account.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/account': {
      preLoaderRoute: typeof LayoutAccountLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/clients': {
      preLoaderRoute: typeof LayoutClientsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/orders': {
      preLoaderRoute: typeof LayoutOrdersLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/products': {
      preLoaderRoute: typeof LayoutProductsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      preLoaderRoute: typeof LayoutSettingsLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/users': {
      preLoaderRoute: typeof LayoutUsersLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutAccountLazyRoute,
    LayoutClientsLazyRoute,
    LayoutOrdersLazyRoute,
    LayoutProductsLazyRoute,
    LayoutSettingsLazyRoute,
    LayoutUsersLazyRoute,
    LayoutIndexLazyRoute,
  ]),
  LoginLazyRoute,
])

/* prettier-ignore-end */
